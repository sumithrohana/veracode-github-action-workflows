name: gitHub_action_veracode_security_scanning

on:
  # Triggers the workflow on push or pull request events but only for the given branch for e.g., [ develop, 'release**']
  push:
    branches: [ <branch_name> ]
  pull_request:
    branches: [ <branch_name> ]

jobs:
 Build:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
       with:
         # Disabling shallow clone is recommended for improving relevancy of reporting
         fetch-depth: 0
     - uses: actions/setup-node@v2
       with:
         node-version: '<node-version>'
         cache: 'npm'
     - name: npm install
       run: 
         npm install

     - shell: bash
       run: |
        zip -9 -r <binary_name>.zip ./ -x pipeline-scan.jar results*.* ./build/libs/**\* ./tests/**\* ./.git*/**\* ./.sonar*/**\* ./.idea*/**\* ./**\*Test* ./**\*__tests__* ./test/**\* test-results/**\* .git/**\* ./**\*Test* ./**\*__tests* .github/**\* ./**\*__tests__* .idea/**\* .nyc_output/**\* coverage/**\* node_modules*/**\* sonar* ./**\*.jpg ./**\*.png
        mkdir staging && cp <binary_name>.zip staging
     - uses: actions/upload-artifact@v2 
       with:
        name: package
        path: staging
        
        
 Veracode-SAST-pipeline-scan:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
    - name: Set up JDK <java-version>
      uses: actions/setup-java@v1
      with:
       java-version: <java-version>
       
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
       name: package
       
    - shell: bash
      run: |
       curl https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -o ./pipeline-scan-LATEST.zip
    - name: Unzip the Pipeline Scanner
      run: unzip -qq -n pipeline-scan-LATEST.zip
    - shell: bash
      run: |
       java -Dpipeline.debug=false -jar pipeline-scan.jar --veracode_api_id "${{secrets.VID}}" --veracode_api_key "${{secrets.VKEY}}" --file "<binary_name>.zip" --fail_on_severity="Very High, High"
    # if you may change -Dpipeline.debug=true
    
 Veracode-SAST-Upload-Scan:
  runs-on: ubuntu-latest
  needs: [ Build ]
  steps:
   - name: Download a single artifact
     uses: actions/download-artifact@v2
     with:
      name: package
      
   - uses: veracode/veracode-uploadandscan-action@master # Run the uploadandscan action. Inputs are described above.
     with:
      vid: '${{ secrets.VID }}'
      vkey: '${{ secrets.VKEY }}'
      criticality: 'Medium'
      createsandbox: 'false'
      appname: '<veracode-application_name>'
      sandboxname: '<veracode-sandbox_name>'
      createprofile: 'false'
      filepath: '<binary_name>.zip'
      #deleteIncompleteScan: 'true'
      version: '<repo_name>_github_scan_<branch_name>: ${{ github.run_id }}' 
      #scantimeout: 30 #Uncomment this if you need to wait for results from Veracode Portal
  
 Veracode-SCA:
  runs-on: ubuntu-latest
  steps:
   - uses: actions/checkout@v2
   - shell: bash
     env:
       SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
     run: |
        export SRCCLR_SCM_URI="<repo_URL>"
        export SRCCLR_SCM_REF=${{ github.workflow }}
        export SRCCLR_SCM_REF_TYPE="branch"
        export SRCCLR_SCM_REV=${{ github.run_id }}
        
        export EXTRA_ARGS='--update-advisor'
        curl -sSL https://download.sourceclear.com/ci.sh | bash -s scan $EXTRA_ARGS || true  
 
